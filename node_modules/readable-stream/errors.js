'use strict';

class ERR_INVALID_ARG_TYPE extends TypeError {
  constructor(name, expected, actual) {
    super(`The "${name}" argument must be of type ${expected}. Received type ${typeof actual}`);
    this.name = 'ERR_INVALID_ARG_TYPE';
  }
}

class ERR_STREAM_PUSH_AFTER_EOF extends Error {
  constructor() {
    super('stream.push() after EOF');
    this.name = 'ERR_STREAM_PUSH_AFTER_EOF';
  }
}

class ERR_METHOD_NOT_IMPLEMENTED extends Error {
  constructor(name) {
    super(`${name} method not implemented`);
    this.name = 'ERR_METHOD_NOT_IMPLEMENTED';
  }
}

class ERR_STREAM_UNSHIFT_AFTER_END_EVENT extends Error {
  constructor() {
    super('stream.unshift() after end event');
    this.name = 'ERR_STREAM_UNSHIFT_AFTER_END_EVENT';
  }
}

module.exports = {
  codes: {
    ERR_INVALID_ARG_TYPE,
    ERR_STREAM_PUSH_AFTER_EOF,
    ERR_METHOD_NOT_IMPLEMENTED,
    ERR_STREAM_UNSHIFT_AFTER_END_EVENT,
  }
};
