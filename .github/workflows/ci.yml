# .github/workflows/ci.yml
name: CI + Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 코드 체크아웃
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Node + 캐시
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      # 3) 의존성 설치
      - run: npm ci

      # 4) 테스트
      - name: Run Jest tests
        run: npm test
        env:
          NODE_ENV: test
          MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          DB_NAME:    ${{ secrets.TEST_DB_NAME }}
          SESSION_SECRET: ${{ secrets.TEST_SESSION_SECRET }}

      # 5) Heroku CLI 설치
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      # 6) Heroku 로그인 (.netrc)
      - name: Login to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_EMAIL:   ${{ secrets.HEROKU_EMAIL }}
        run: |
          cat <<EOF > ~/.netrc
          machine api.heroku.com
            login $HEROKU_EMAIL
            password $HEROKU_API_KEY
          machine git.heroku.com
            login $HEROKU_EMAIL
            password $HEROKU_API_KEY
          EOF
          heroku auth:whoami

      # 7) 빌드팩 설정 (Node.js → Python)
      - name: Configure Heroku buildpacks
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          # Ensure Node is the primary buildpack and add Python as secondary
          heroku buildpacks:set heroku/nodejs -a $HEROKU_APP_NAME
          heroku buildpacks:add --index 2 heroku/python -a $HEROKU_APP_NAME
          heroku buildpacks -a $HEROKU_APP_NAME

      # 8) Git push 배포
      - name: Deploy to Heroku
        env:
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          heroku git:remote -a $HEROKU_APP_NAME
          git push heroku HEAD:main --force
